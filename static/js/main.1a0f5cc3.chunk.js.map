{"version":3,"sources":["actions/ColorActions.js","actions/MessageActions.js","actions/UsersActions.js","components/Header/Header.js","components/InfoBar/InfoBarStyles.js","components/InfoBar/InfoBar.js","components/Input/Input.js","components/MessageBox/Message.js","components/MessageBox/MessageBox.js","Socket.js","App.js","reportWebVitals.js","reducers/ColorReducer.js","reducers/UsersReducer.js","reducers/MessageReducer.js","index.js"],"names":["GET_COLOR","SET_COLOR","ADD_MESSAGE","UPDATE_MESSAGES","updateMessages","messages","type","payload","SET_USERS","useStyles","makeStyles","icon","color","Header","classes","className","Typography","variant","theme","info_container","breakpoints","down","fontSize","width","up","header","user","textDecoration","InfoBar","username","users","useSelector","state","UsersReducer","Paper","gutterBottom","map","i","Input","handleMessage","useState","message","setMessage","sendMessage","Box","display","component","onChange","e","target","value","onKeyDown","keyCode","Button","startIcon","onClick","Message","date","style","ReactEmoji","emojify","text","scroll","overflowY","flex","MessageBox","MessageReducer","socket","io","App","dispatch","useDispatch","ColorReducer","cookies","Cookies","setUsername","useEffect","uname","savedUsername","get","emit","on","msg","console","log","messageList","toast","success","position","autoClose","draggable","err","error","obj","handleSetUsername","setUsers","set","allMessages","handleColorChange","msg_arr","split","shift","newColor","join","length","setColor","includes","newName","handleUsernameChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a0f5cc3.chunk.js","sourcesContent":["export const GET_COLOR = \"GET_COLOR\";\r\nexport const SET_COLOR = \"SET_COLOR\";\r\n\r\nexport const getColor = () => {\r\n  return { type: GET_COLOR, payload: \"\" };\r\n};\r\n\r\nexport const setColor = (color) => {\r\n  return { type: SET_COLOR, payload: color };\r\n};\r\n","export const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const UPDATE_MESSAGES = \"UPDATE_MESSAGES\";\r\n\r\nexport const addMessage = (message) => {\r\n  return { type: ADD_MESSAGE, payload: message };\r\n};\r\n\r\nexport const updateMessages = (messages) => {\r\n  return { type: UPDATE_MESSAGES, payload: messages };\r\n};\r\n","export const SET_USERS = \"SET_USERS\";\r\n\r\nexport const setUsers = (users) => {\r\n  return { type: SET_USERS, payload: users };\r\n};\r\n","import { Typography, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport \"./Header.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  icon: {\r\n    color: \"#0F0\",\r\n  },\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={`header`}>\r\n      <div className=\"leftInnerContainer\">\r\n        <FiberManualRecordIcon className={classes.icon} />\r\n        <Typography variant=\"h5\">Chat Away</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  info_container: {\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"1rem\",\n      width: \"50%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      fontSize: \"1rem\",\n      width: \"30%\",\n    },\n\n    overflow: \"auto\",\n    textAlign: \"center\",\n    height: \"100%\",\n\n    color: \"#FFFFFF\",\n    backgroundColor: \"#1139FF\",\n  },\n  header: {\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"1.3rem\",\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      fontSize: \"2rem\",\n    },\n    textTransform: \"Capitalize\",\n    textDecoration: \"underline\",\n  },\n  user: {\n    textDecoration: \"underline\",\n    fontSize: \"1rem\",\n    color: \"#F9F2EE\",\n  },\n}));\n","import { Paper, Typography } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { useStyles } from \"./InfoBarStyles\";\nfunction InfoBar({ username }) {\n  const users = useSelector((state) => state.UsersReducer.users);\n  const classes = useStyles();\n  return (\n    <Paper className={classes.info_container}>\n      <Typography className={classes.header} gutterBottom>\n        Online\n      </Typography>\n\n      {users.map((user, i) =>\n        user.username === username ? (\n          <Typography variant=\"subtitle2\" key={i}>\n            <b>{user.username} (YOU)</b>\n          </Typography>\n        ) : (\n          <Typography variant=\"subtitle2\" key={i}>\n            {user.username}\n          </Typography>\n        )\n      )}\n    </Paper>\n  );\n}\n\nexport default InfoBar;\n","import React, { useState } from \"react\";\nimport \"./Input.css\";\nimport { Box, Button } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nfunction Input({ handleMessage }) {\n  const [message, setMessage] = useState(\"\");\n\n  const sendMessage = () => {\n    if (message !== \"\") {\n      handleMessage(message);\n      setMessage(\"\");\n    }\n  };\n  const handleEnter = (e) => {\n    if (e.keyCode === 13) {\n      sendMessage();\n    }\n  };\n  return (\n    <Box display=\"flex\" component=\"div\" className=\"input-form\">\n      <input\n        onChange={(e) => setMessage(e.target.value)}\n        value={message}\n        className=\"message-input\"\n        onKeyDown={handleEnter}\n      />\n      <Button\n        className=\"message-button\"\n        color=\"primary\"\n        variant=\"contained\"\n        startIcon={<SendIcon />}\n        onClick={sendMessage}\n      >\n        Send\n      </Button>\n    </Box>\n  );\n}\n\nexport default Input;\n","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ReactEmoji from \"react-emoji\";\r\nimport \"./MessageStyles.css\";\r\nfunction Message({ message, username }) {\r\n  if (message.username === username) {\r\n    return (\r\n      <>\r\n        <div className=\"user-info justifyEnd\">\r\n          <Typography variant=\"body2\" className=\"sentText pl-10\">\r\n            {message.username} :\r\n          </Typography>\r\n          <Typography variant=\"caption\"> {message.date}</Typography>\r\n        </div>\r\n        <div className=\"messageContainer justifyEnd\">\r\n          <div className={`messageBox backgroundLight `}>\r\n            <Typography\r\n              variant=\"body2\"\r\n              className=\"messageText\"\r\n              style={{ color: `#${message.color}` }}\r\n            >\r\n              <b> {ReactEmoji.emojify(message.text)}</b>\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"user-info\">\r\n          <Typography variant=\"body2\" className=\"sentText pl-10\">\r\n            {message.username} :\r\n          </Typography>\r\n          <Typography variant=\"caption\">{message.date}</Typography>\r\n        </div>\r\n        <div className=\"messageContainer justifyStart\">\r\n          <div className=\"messageBox backgroundLight\">\r\n            <Typography\r\n              variant=\"body2\"\r\n              className=\"messageText colorDark\"\r\n              style={{ color: `#${message.color}` }}\r\n            >\r\n              {ReactEmoji.emojify(message.text)}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport Message from \"./Message\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles({\n  scroll: {\n    overflowY: \"auto\",\n    flex: \"auto\",\n  },\n});\n\nfunction MessageBox({ username }) {\n  const messages = useSelector((state) => state.MessageReducer.messages);\n  const classes = useStyles();\n\n  const text = messages.map((message, i) => (\n    <div key={i}>\n      {\" \"}\n      <Message message={message} username={username} />\n    </div>\n  ));\n  return (\n    <ScrollToBottom className={classes.scroll}>\n      <div className={classes.messages}>{text}</div>\n    </ScrollToBottom>\n  );\n}\n\nexport default MessageBox;\n","import io from \"socket.io-client\";\n\nconst ENDPOINT = \"https://seng513-assignment3.herokuapp.com/\";\nexport const socket = io(ENDPOINT);\n","import { Box } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Cookies from \"universal-cookie\";\nimport { setColor } from \"./actions/ColorActions\";\nimport { addMessage, updateMessages } from \"./actions/MessageActions\";\nimport { setUsers } from \"./actions/UsersActions\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport InfoBar from \"./components/InfoBar/InfoBar\";\nimport Input from \"./components/Input/Input\";\nimport MessageBox from \"./components/MessageBox/MessageBox\";\nimport { socket } from \"./Socket\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const color = useSelector((state) => state.ColorReducer.color);\n\n  const cookies = new Cookies();\n  const [username, setUsername] = useState(\"\");\n\n  /*Handle sending request to server on first join*/\n  useEffect(() => {\n    let uname = \"\";\n    let savedUsername = cookies.get(\"username\");\n    if (savedUsername) {\n      uname = savedUsername;\n    }\n    socket.emit(\"join\", uname);\n  }, []);\n\n  useEffect(() => {\n    /* Handle getting chat message. Update all messages */\n    socket.on(\"chat message\", (msg) => {\n      console.log(\"got message\");\n      console.log(msg);\n      dispatch(addMessage(msg));\n    });\n    socket.on(\"update messages\", (messageList) => {\n      dispatch(updateMessages(messageList));\n    });\n\n    /* Show success message on this reponse*/\n    socket.on(\"success\", (msg) => {\n      toast.success(msg, {\n        position: \"top-center\",\n        autoClose: 5000,\n        draggable: true,\n      });\n    });\n\n    /* Show error that username already exists on this response */\n    socket.on(\"username exist\", (err) => {\n      toast.error(\"Username Exists!\", {\n        position: \"top-center\",\n        autoClose: 5000,\n        draggable: true,\n      });\n    });\n\n    /* Set username for user and set all messages held in server */\n    socket.on(\"setUsername\", (obj) => {\n      handleSetUsername(obj);\n    });\n\n    /* Get list of users online and display to user/set the users */\n    socket.on(\"roomData\", (users) => {\n      dispatch(setUsers(users));\n    });\n  }, []);\n\n  //handle setting users username and messages upon connecting and changing username\n  const handleSetUsername = (obj) => {\n    setUsername(obj.username);\n    cookies.set(\"username\", obj.username);\n\n    dispatch(updateMessages(obj.allMessages));\n  };\n\n  /* Handles sending data to server when username changes name */\n  const handleUsernameChange = (msg) => {\n    let msg_arr = msg.split(\" \");\n\n    if (msg_arr[0] === \"/name\") {\n      msg_arr.shift();\n      let newName = msg_arr.join(\" \");\n      console.log(\"new name\" + newName);\n      if (newName.length < 10) {\n        socket.emit(\"new name\", { username: username, newName: newName });\n      } else {\n        toast.error(\n          \"Username is too long, please enter 10 characters or less!\",\n          {\n            position: \"top-center\",\n            autoClose: 5000,\n            draggable: true,\n          }\n        );\n      }\n    } else {\n      socket.emit(\"chat-message\", {\n        username: username,\n        text: msg,\n        color: color,\n      });\n    }\n  };\n\n  /* Handles sending data to server when username changes color */\n  const handleColorChange = (msg) => {\n    let msg_arr = msg.split(\" \");\n\n    if (msg_arr[0] === \"/color\") {\n      msg_arr.shift();\n      let newColor = msg_arr.join(\" \");\n      console.log(\"new color\" + newColor);\n      if (newColor.length === 6) {\n        dispatch(setColor(newColor));\n        socket.emit(\"new color\", { username: username, newColor: newColor });\n      } else {\n        toast.error(\"Color is invalid!\", {\n          position: \"top-center\",\n          autoClose: 5000,\n          draggable: true,\n        });\n      }\n    } else {\n      socket.emit(\"chat-message\", {\n        username: username,\n        text: msg,\n        color: color,\n      });\n    }\n  };\n\n  /* Handles user request to send a message to the server*/\n  const handleMessage = (msg) => {\n    if (msg.includes(\"/name\")) {\n      handleUsernameChange(msg);\n    } else if (msg.includes(\"/color\")) {\n      handleColorChange(msg);\n    } else {\n      socket.emit(\"chat-message\", {\n        username: username,\n        text: msg,\n        color: color,\n      });\n    }\n  };\n\n  return (\n    <div className=\"chat-outerContainer\">\n      <InfoBar username={username} />\n      <Box component=\"div\" className=\"chat-container\">\n        <Header />\n        <MessageBox username={username} />\n        <Input handleMessage={handleMessage} />\n      </Box>\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_COLOR, SET_COLOR } from \"../actions/ColorActions\";\r\n\r\nconst initialState = { color: \"000000\" };\r\n\r\nexport const ColorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_COLOR:\r\n      return state;\r\n    case SET_COLOR:\r\n      return {\r\n        ...state,\r\n        color: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_USERS } from \"../actions/UsersActions\";\r\n\r\nconst initialState = { users: [] };\r\n\r\nexport const UsersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_MESSAGE, UPDATE_MESSAGES } from \"../actions/MessageActions\";\r\nconst initialState = { messages: [] };\r\n\r\nexport const MessageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      };\r\n    case UPDATE_MESSAGES:\r\n      return {\r\n        ...state,\r\n        messages: [state.messages[0], ...action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { ColorReducer } from \"./reducers/ColorReducer\";\nimport { UsersReducer } from \"./reducers/UsersReducer\";\nimport { MessageReducer } from \"./reducers/MessageReducer\";\nconst rootReducer = combineReducers({\n  ColorReducer: ColorReducer,\n  UsersReducer: UsersReducer,\n  MessageReducer: MessageReducer,\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}